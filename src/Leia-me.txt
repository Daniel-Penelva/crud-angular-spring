Utilizar o Angular Material:

Angular Material (site: https://material.angular.io/)
Get Started: (link: https://material.angular.io/guide/getting-started) - Comando para Install Angular Material: ng add @angular/material

Angular Material é uma biblioteca de componentes de interface do usuário (UI) para o Angular, desenvolvida e mantida pela equipe do Angular. 
Ela fornece uma coleção completa de componentes estilizados e prontos para uso que seguem as diretrizes de design do Material Design, uma 
linguagem de design desenvolvida pelo Google.

O Material Design é uma abordagem de design visual que visa criar uma experiência de usuário consistente, moderna e intuitiva em diferentes 
plataformas e dispositivos. 
Os componentes do Angular Material implementam esses princípios de design, fornecendo uma interface coesa e agradável para seus aplicativos 
Angular.

Alguns dos principais componentes fornecidos pelo Angular Material incluem:

1. Botões (Button): Botões estilizados com diferentes tamanhos e estilos.

2. Caixas de diálogo (Dialog): Caixas de diálogo modais para exibir informações ou solicitar ações do usuário.

3. Barras de navegação (Toolbar e Menu): Componentes para criar barras de navegação, menus e menus de contexto.

4. Tabelas (Table): Componentes para exibir dados em formato de tabela.

5. Campos de entrada (Input): Componentes para campos de entrada de texto, seleção e outras interações do usuário.

6. Listas (List): Componentes para criar listas de itens.

7. Cards: Componentes para criar cartões de conteúdo.

8. Slides (Slider): Componentes para criar controles deslizantes interativos.

9. E muitos outros, como Stepper, Chips, Datepicker, Progress Spinner, etc.

Para cada componente criado é preciso fazer o seu respectivo import no app.module.ts.

Além dos componentes, o Angular Material também fornece estilos predefinidos para criar uma aparência consistente em seus aplicativos. A 
biblioteca é altamente personalizável e permite ajustar facilmente a aparência dos componentes para se adequarem ao design exclusivo do seu aplicativo.

Para usar o Angular Material em seu projeto Angular, você precisará instalar a biblioteca usando o gerenciador de pacotes (por exemplo, npm ou 
yarn) e importar os módulos de que você precisa no módulo apropriado do seu aplicativo.

Angular Material é uma escolha popular para desenvolvedores Angular que desejam criar interfaces de usuário atraentes e eficientes de forma 
rápida e consistente, seguindo os princípios do Material Design.

-------------------------------------------------------------------- // -----------------------------------------------------------------------

Criando o módulo courses (cursos) e o roteamento
comando: ng g m courses --routing

Criando o componente courses dentro de courses
comando: ng g c courses/courses

-------------------------------------------------------------------- // -----------------------------------------------------------------------

Vamos explicar linha por linha:

{path: '', pathMatch: 'full', redirectTo: 'courses' }:
Relembrar path é o caminho; O redirect vai fazer um redirecionamento para a rota courses para quando acessa a raiz da pasta, no caso, o 
http://localhost:4200. 

Esta é a primeira definição de rota. Aqui, definimos que, quando o caminho da URL estiver vazio (''), a rota deve redirecionar para 'courses'. 
O pathMatch: 'full' indica que a rota deve ser correspondida exatamente com a URL inteira para executar o redirecionamento. Portanto, quando o 
usuário acessar a raiz do aplicativo (por exemplo, http://seuapp.com/), ele será redirecionado para http://seuapp.com/courses.

------ // ------

{path: 'courses', loadChildren: () => import('./courses/courses.module').then(m => m.CoursesModule)}:
No import é o caminho do nosso módulo filho, no caso é o caminho do nosso modulo courses (m.CoursesModule).

Esta é a segunda definição de rota. Aqui, estamos dizendo que quando o caminho da URL for 'courses', o módulo CoursesModule deve ser carregado 
de forma dinâmica. Isso é conhecido como carregamento tardio (lazy loading) de um módulo. O carregamento tardio é uma técnica para dividir o 
aplicativo em módulos menores e carregá-los apenas quando necessário, o que pode melhorar o desempenho geral do aplicativo.

O loadChildren é uma propriedade especial das rotas que aceita uma função que retorna uma promise resolvendo para o módulo que deve ser 
carregado. Neste caso, a função () => import('./courses/courses.module').then(m => m.CoursesModule) está importando dinamicamente o módulo 
CoursesModule e retornando-o para ser carregado.

Documentação lazy-loading:
https://angular.io/guide/lazy-loading-ngmodules


-------------------------------------------------------------------- // -----------------------------------------------------------------------
Table do angular material:
https://material.angular.io/components/table/overview

Vamos importar o API do componente no modulo do curso.
https://material.angular.io/components/table/api

OBS. Organizar os imports de acordo com as boas práticas do angular.
Atalho: CTRL + SHIFT + P - TS Hero 

Criar uma interface - comando:


--------- // ----------
<tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>

<tr mat-row>:
Essa tag <tr> representa uma linha da tabela. A diretiva mat-row é uma diretiva personalizada fornecida pelo Angular Material que é usada para 
estilizar a linha da tabela de acordo com os estilos do Material Design.

let row: Isso é uma declaração de variável. Aqui, estamos criando uma variável chamada row que representa os dados da linha atual. Essa variável 
é usada para exibir os valores correspondentes em cada célula da tabela.

*matRowDef="let row; columns: displayedColumns;":
Esta é a diretiva matRowDef usada para definir como os dados da tabela devem ser exibidos em cada coluna da tabela. A diretiva é aplicada na 
tag <tr mat-row> e usa duas propriedades: let row e columns: displayedColumns.

O 'displayedColumns' tem a a função de mostrar para cada linha (ou cada registro) que temos na nossa lista que vai ser mostrado  as colunas 
name e category que foram declaradas na  variável 'displayedColumns'. Ou seja, columns: displayedColumns: Aqui, columns é uma palavra-chave que 
representa a matriz de nomes das colunas da tabela, e displayedColumns é uma variável que contém a matriz real de nomes das colunas que 
desejamos exibir na tabela. Essa matriz é usada para mapear os dados da variável row para as colunas corretas da tabela.

--------- // ----------
Utilizando o Cards - Vamos importar o API do componente no modulo do curso.
https://material.angular.io/components/card/api


API reference for Angular Material toolbar - https://material.angular.io/components/toolbar/api
import {MatToolbarModule} from '@angular/material/toolbar';

--------- // ----------
Vamos  criar um modulo numa pasta shared para ter todos os imports do angular material.
Comando: ng g m shared/app-material